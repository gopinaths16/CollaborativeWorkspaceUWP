<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="using:CollaborativeWorkspaceUWP.Utilities.Converters"
    xmlns:customusercontrols="using:CollaborativeWorkspaceUWP.CustomControls.UserControls">

    <converters:CollectionToVisibilityConverter x:Key="CollectionToVisibilityConverter" />
    <converters:CollectionToVisibilityConverterInverse x:Key="CollectionToVisibilityConverterInverse" />
    <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <converters:BoolToVisibilityConverterInverse x:Key="BoolToVisibilityConverterInverse" />
    <converters:ObjectToVisibilityConverter x:Key="ObjectToVisibilityConverter" />
    <converters:ObjectToVisibilityConverterInverse x:Key="ObjectToVisibilityConverterInverse" />
    <converters:ObjectToBoolConverter x:Key="ObjectToBoolConverter" />
    <converters:ObjectToBoolConverterInverse x:Key="ObjectToBoolConverterInverse" />
    <converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />
    <converters:LongToIntConverter x:Key="LongToIntConverter" />
    <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
    <converters:VisibilityToNullConverter x:Key="VisibilityToNullConverter" />
    <converters:CollectionToBoolConverter x:Key="CollectionToBoolConverter" />
    <converters:CollectionToBoolConverterInverse x:Key="CollectionToBoolConverterInverse" />

    <Style TargetType="TextBlock" x:Name="TaskViewTitle">
        <Setter Property="Text" Value="Task view"/>
        <Setter Property="FontSize" Value="30" />
        <Setter Property="Margin" Value="10, 0, 0, 0" />
    </Style>

    <Style TargetType="ContentDialog" x:Name="ContentDialogStyle">
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="Background" Value="{StaticResource SecondaryAcrylicBrush}" />
    </Style>

    <Style TargetType="StackPanel" x:Name="DialogContentStyle">
        <Setter Property="Margin" Value="0, 10, 0, 0" />
    </Style>

    <Style TargetType="TextBox" x:Name="TextBoxCustom">
        <Setter Property="CornerRadius" Value="2" />
        <Setter Property="Margin" Value="0, 5, 0, 20" />
    </Style>

    <Style TargetType="TextBox" x:Name="TextBoxNoBg">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled"/>
                                <VisualState x:Name="ReadOnly"/>
                                <VisualState x:Name="MouseOver"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" 
                                                                       Storyboard.TargetName="BorderElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" 
                                                                    Value="{TemplateBinding Background}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" 
                                                                       Storyboard.TargetName="BorderElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" 
                                                                    Value="{TemplateBinding BorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" 
                                                                       Storyboard.TargetName="BorderElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" 
                                                                    Value="{TemplateBinding Background}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" 
                                                                       Storyboard.TargetName="BorderElement">
                                            <DiscreteObjectKeyFrame KeyTime="0" 
                                                                    Value="{TemplateBinding BorderBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="BorderElement" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                            <Grid>
                                <ScrollViewer x:Name="ContentElement" 
                                              HorizontalScrollBarVisibility="Disabled" 
                                              VerticalScrollBarVisibility="Hidden" 
                                              IsTabStop="False"/>
                                <TextBlock x:Name="PlaceholderTextElement" 
                                           Text="{TemplateBinding PlaceholderText}" 
                                           Foreground="{ThemeResource TextControlPlaceholderForeground}"
                                           IsHitTestVisible="True" 
                                           Visibility="{Binding Text.Length, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource StringToVisibilityConverter}, ConverterParameter=Empty}"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- #7F000000 to be changed-->
    <AcrylicBrush x:Key="MainBackgroundAcrylicBrush"
                  BackgroundSource="Backdrop"
                  TintColor="#7F000000"
                  TintOpacity="1"/>

    <AcrylicBrush x:Key="AccentAcrylicBrush"
                  BackgroundSource="HostBackdrop"
                  TintColor="{StaticResource SystemAccentColor}"
                  TintOpacity="0.6"/>

    <AcrylicBrush x:Key="SecondaryAcrylicBrush"
                  BackgroundSource="HostBackdrop"
                  TintColor="Black"
                  TintOpacity="1"/>

    <Style TargetType="ListViewItem" x:Key="ListViewItemStyleAccent">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="OuterContainer" 
                            Background="{TemplateBinding Background}"
                            CornerRadius="5">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="OuterContainer"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="{StaticResource SystemListLowColor}" 
                                                        Duration="0:0:0.2"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="OuterContainer"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="{StaticResource SystemListAccentHighColor}" 
                                                        Duration="0:0:0.2"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="OuterContainer"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="{StaticResource SystemListAccentLowColor}" 
                                                        Duration="0:0:0.2"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter Content="{TemplateBinding Content}" 
                                          ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListViewItem" x:Key="ListViewItemStyleDormant">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="OuterContainer" 
                            Background="{TemplateBinding Background}"
                            CornerRadius="10">
                        <ContentPresenter Content="{TemplateBinding Content}" 
                                          ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckboxNoContent" TargetType="CheckBox">
        <Setter Property="BorderBrush" Value="{ThemeResource CheckBoxBorderBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph" 
                                                                       Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" 
                                                                    Value="DarkGray"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" 
                                                                       Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" 
                                                                    Value="Gray"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph" 
                                                                       Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" 
                                                                    Value="Black"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" 
                                                                       Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" 
                                                                    Value="LightGray"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph" 
                                                                       Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="Gray"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" 
                                                                       Storyboard.TargetProperty="Stroke">
                                            <DiscreteObjectKeyFrame KeyTime="0" 
                                                                    Value="Gray"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Background" 
                                                                       Storyboard.TargetProperty="Fill">
                                            <DiscreteObjectKeyFrame KeyTime="0" 
                                                                    Value="{TemplateBinding Background}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph" 
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteObjectKeyFrame KeyTime="0" 
                                                                    Value="1"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateGlyph" 
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteObjectKeyFrame KeyTime="0" 
                                                                    Value="1"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CheckGlyph" 
                                                                       Storyboard.TargetProperty="Opacity">
                                            <DiscreteObjectKeyFrame KeyTime="0" 
                                                                    Value="0"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Width="20" 
                                Height="20" 
                                VerticalAlignment="Center" 
                                HorizontalAlignment="Center" 
                                Margin="0,0,10,0"
                                CornerRadius="10">
                            <Grid>
                                <Rectangle x:Name="Background"
                                           Opacity="0.5"/>
                                <Path x:Name="CheckGlyph" 
                                      Data="M0,6 L2,8 L8,2" 
                                      Fill="{StaticResource ApplicationForegroundThemeBrush}" 
                                      Opacity="0" 
                                      Stroke="{TemplateBinding Foreground}" 
                                      StrokeThickness="2" 
                                      HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"/>
                                <Path x:Name="IndeterminateGlyph" 
                                      Data="M0,6 L8,6" 
                                      Fill="{StaticResource ApplicationForegroundThemeBrush}" 
                                      Opacity="0" 
                                      Stroke="{TemplateBinding Foreground}"
                                      StrokeThickness="2" 
                                      HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBox" x:Key="CustomComboBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Border x:Name="Background"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5"
                                Visibility="{Binding SelectedItem, Converter={StaticResource VisibilityToNullConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                            <ContentPresenter x:Name="ContentPresenter"
                                              Margin="5"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding SelectedItem}"
                                              ContentTemplate="{TemplateBinding ItemTemplate}"
                                              Foreground="Black"/>
                        </Border>
                        <StackPanel Orientation="Horizontal"
                                    Margin="{TemplateBinding Margin}"
                                    Padding="{TemplateBinding Padding}"
                                    Visibility="{Binding SelectedItem, Converter={StaticResource NullToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                            <TextBlock Text="{TemplateBinding PlaceholderText}"
                                       Margin="10, 0, 0, 0"
                                       HorizontalAlignment="Center"
                                       Foreground="{TemplateBinding Foreground}"/>
                        </StackPanel>
                        <Popup x:Name="Popup"
                               IsOpen="{TemplateBinding IsDropDownOpen}">
                            <Border x:Name="PopupBorder"
                                    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                                    BorderBrush="{TemplateBinding Background}"
                                    BorderThickness="1"
                                    CornerRadius="5">
                                <ScrollViewer HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="ButtonNoBackground">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border" 
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                        To="Gray" 
                                                        Duration="0:0:0.2"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border" 
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                        To="{StaticResource SystemAccentColor}" 
                                                        Duration="0:0:0.2"/>
                                        <DoubleAnimation Storyboard.TargetName="Border"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.8"
                                                         Duration="0:0:0.2"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Margin="{TemplateBinding Margin}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="ButtonNoBackgroundDormant">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" 
                                                                       Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" 
                                                                    Value="{StaticResource SystemAccentColor}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Margin="{TemplateBinding Margin}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              x:Name="ContentPresenter"
                                              Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="ButtonNoBackgroundDormantAlt">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Border"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0.8"
                                                         Duration="0:0:0.2"/>
                                        <ColorAnimation Storyboard.TargetName="Border" 
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                        To="Gray" 
                                                        Duration="0:0:0.2"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="Border" 
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" 
                                                        To="Gray" 
                                                        Duration="0:0:0.2"/>

                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Margin="{TemplateBinding Margin}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          x:Name="ContentPresenter"
                                          Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Border" x:Key="ReactiveBorder">
        
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxNoBg}" x:Key="TextNoBackground">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

</ResourceDictionary>
